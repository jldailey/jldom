// Generated by CoffeeScript 1.3.3

/*
Copyright (c) 2011 Jesse Dailey <jesse.dailey@gmail.com>
License: MIT License - http://www.opensource.org/licenses/mit-license.php
*/


(function() {
  var Attr, CComment, CData, Comment, Document, DocumentFragment, ELEMENT_MAP, Element, Entity, Event, HTMLAnchorElement, HTMLAreaElement, HTMLAudioElement, HTMLBRElement, HTMLBaseElement, HTMLBlockquoteElement, HTMLBodyElement, HTMLButtonElement, HTMLCanvasElement, HTMLDListElement, HTMLDelElement, HTMLDetailsElement, HTMLDivElement, HTMLDocument, HTMLElement, HTMLEmbedElement, HTMLFieldSetElement, HTMLFormElement, HTMLHRElement, HTMLHeadElement, HTMLHeading2Element, HTMLHeading3Element, HTMLHeading4Element, HTMLHeading5Element, HTMLHeading6Element, HTMLHeadingElement, HTMLHtmlElement, HTMLIFrameElement, HTMLImageElement, HTMLInputElement, HTMLInsElement, HTMLKeygenElement, HTMLLIElement, HTMLLabelElement, HTMLLegendElement, HTMLLinkElement, HTMLMapElement, HTMLMenuElement, HTMLMetaElement, HTMLMeterElement, HTMLOListElement, HTMLObjectElement, HTMLOptGroupElement, HTMLOptionElement, HTMLOutputElement, HTMLParagraphElement, HTMLParamElement, HTMLPreElement, HTMLProgressElement, HTMLQuoteElement, HTMLScriptElement, HTMLSelectElement, HTMLSourceElement, HTMLStyleElement, HTMLTableBodyElement, HTMLTableCaptionElement, HTMLTableCellElement, HTMLTableColElement, HTMLTableElement, HTMLTableFootElement, HTMLTableHeadElement, HTMLTableRowElement, HTMLTextAreaElement, HTMLTitleElement, HTMLUListElement, HTMLVideoElement, MutationEvent, Node, NotSupported, Text, extend, getInnerText, htmlescape, htmlparse, htmlunescape, matcher, parser, property, repeat, setInnerText,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },
    __slice = [].slice;

  parser = require("./html/parser");

  htmlparse = parser.parse;

  htmlescape = parser.escape;

  htmlunescape = parser.unescape;

  matcher = require("./css/nwmatcher");

  NotSupported = function() {
    throw Error("NOT_SUPPORTED");
  };

  repeat = function(s, n) {
    n = Math.max(0, n);
    switch (n) {
      case 0:
        return "";
      case 1:
        return s;
      default:
        return s + repeat(s, n - 1);
    }
  };

  extend = function(o, p) {
    var k;
    o || (o = {});
    for (k in p) {
      o[k] = p[k];
    }
    return o;
  };

  property = function(o, k, props) {
    return Object.defineProperty(o, k, extend({
      enumerable: true,
      configurable: true
    }, props));
  };

  Event = (function() {

    Event.CAPTURING_PHASE = 1;

    Event.AT_TARGET = 2;

    Event.BUBBLING_PHASE = 3;

    function Event() {
      this.type = null;
      this.target = null;
      this.currentTarget = null;
      this.eventPhase = 0;
      this.bubbles = false;
      this.cancelable = true;
      this.timeStamp = 0;
    }

    Event.prototype.stopPropagation = function() {};

    Event.prototype.preventDefault = function() {};

    Event.prototype.initEvent = function(type, canBubble, cancelable) {
      this.type = type;
      this.bubbles = canBubble;
      this.cancelable = cancelable;
      return this.timeStamp = new Date().getTime();
    };

    return Event;

  })();

  MutationEvent = (function(_super) {

    __extends(MutationEvent, _super);

    MutationEvent.MODIFICATION = 1;

    MutationEvent.ADDITION = 2;

    MutationEvent.REMOVAL = 3;

    function MutationEvent() {
      this.relatedNode = null;
      this.prevValue = null;
      this.newValue = null;
      this.attrName = null;
      this.attrChange = 0;
    }

    MutationEvent.prototype.initMutationEvent = function(type, canBubble, cancelable, relatedNode, prevValue, newValue, attrName, attrChange) {
      this.type = type;
      this.bubbles = canBubble;
      this.cancelable = cancelable;
      this.relatedNode = relatedNode;
      this.prevValue = prevValue;
      this.newValue = newValue;
      this.attrName = attrName;
      return this.attrChange = attrChange;
    };

    return MutationEvent;

  })(Event);

  Node = (function() {

    Node.ELEMENT_NODE = 1;

    Node.ATTRIBUTE_NODE = 2;

    Node.TEXT_NODE = 3;

    Node.CDATA_SECTION_NODE = 4;

    Node.ENTITY_REFERENCE_NODE = 5;

    Node.ENTITY_NODE = 6;

    Node.PROCESSING_INSTRUCTION_NODE = 7;

    Node.COMMENT_NODE = 8;

    Node.DOCUMENT_NODE = 9;

    Node.DOCUMENT_TYPE_NODE = 10;

    Node.DOCUMENT_FRAGMENT_NODE = 11;

    Node.NOTATION_NODE = 12;

    Node.DOCUMENT_POSITION_DISCONNECTED = 1;

    Node.DOCUMENT_POSITION_PRECEDING = 2;

    Node.DOCUMENT_POSITION_FOLLOWING = 4;

    Node.DOCUMENT_POSITION_CONTAINS = 8;

    Node.DOCUMENT_POSITION_CONTAINED_BY = 16;

    Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC = 32;

    function Node(name, value, type, ownerDocument) {
      if (value == null) {
        value = null;
      }
      if (type == null) {
        type = 1;
      }
      if (ownerDocument == null) {
        ownerDocument = null;
      }
      this._private = {
        nodeName: null,
        parentNode: null,
        childIndex: -1,
        classes: []
      };
      this.nodeName = name;
      this.nodeValue = value;
      this.nodeType = type;
      this.ownerDocument = ownerDocument;
      this.childNodes = [];
      this.attributes = {};
      this.listeners = {
        "true": {},
        "false": {}
      };
    }

    Node.prototype.addEventListener = function(type, listener, useCapture) {
      var list, _base, _ref, _ref1;
      if (useCapture == null) {
        useCapture = false;
      }
      list = ((_ref = (_base = this.listeners[useCapture])[type]) != null ? _ref : _base[type] = []);
      if (_ref1 = !listener, __indexOf.call(list, _ref1) >= 0) {
        return list.push(listener);
      }
    };

    Node.prototype.removeEventListener = function(type, listener, useCapture) {
      var i, list, _base, _ref;
      if (listener == null) {
        listener = null;
      }
      if (useCapture == null) {
        useCapture = false;
      }
      list = ((_ref = (_base = this.listeners[useCapture])[type]) != null ? _ref : _base[type] = []);
      i = list.indexOf(listener);
      return list.splice(i, 1);
    };

    Node.prototype.dispatchEvent = function(evt) {
      var ancestor, chain, handler, list, prevented, stopped, _i, _j, _k, _l, _len, _len1, _len2, _len3, _len4, _m, _ref, _results;
      prevented = false;
      stopped = false;
      evt.preventDefault = function() {
        if (evt.cancelable) {
          return prevented = true;
        }
      };
      evt.stopPropagation = function() {
        return stopped = true;
      };
      evt.target = this;
      evt.eventPhase = Event.CAPTURING_PHASE;
      chain = [this];
      while (chain[0].parentNode !== this.ownerDocument) {
        chain.unshift(chain[0].parentNode);
      }
      chain.unshift(this.ownerDocument);
      for (_i = 0, _len = chain.length; _i < _len; _i++) {
        ancestor = chain[_i];
        evt.currentTarget = ancestor;
        list = ancestor.listeners[true][evt.type];
        if (list) {
          for (_j = 0, _len1 = list.length; _j < _len1; _j++) {
            handler = list[_j];
            handler(evt);
          }
        }
        if (stopped) {
          break;
        }
      }
      evt.eventPhase = Event.AT_TARGET;
      evt.currentTarget = evt.target;
      list = this.listeners[true][evt.type];
      if (list) {
        for (_k = 0, _len2 = list.length; _k < _len2; _k++) {
          handler = list[_k];
          handler(evt);
        }
      }
      list = this.listeners[false][evt.type];
      if (list) {
        for (_l = 0, _len3 = list.length; _l < _len3; _l++) {
          handler = list[_l];
          handler(evt);
        }
      }
      if (evt.bubbles) {
        _ref = chain.reverse();
        _results = [];
        for (_m = 0, _len4 = _ref.length; _m < _len4; _m++) {
          ancestor = _ref[_m];
          evt.currentTarget = ancestor;
          list = ancestor.listeners[false][evt.type];
          if (list) {
            _results.push((function() {
              var _len5, _n, _results1;
              _results1 = [];
              for (_n = 0, _len5 = list.length; _n < _len5; _n++) {
                handler = list[_n];
                _results1.push(handler(evt));
              }
              return _results1;
            })());
          } else {
            _results.push(void 0);
          }
        }
        return _results;
      }
    };

    Node.prototype.cloneNode = function(deep) {
      var a, c, ret, _i, _len, _ref;
      if (deep == null) {
        deep = false;
      }
      ret = (function() {
        switch (this.constructor) {
          case Text:
          case Comment:
          case CData:
            return new this.constructor(this.nodeValue, this.ownerDocument);
          case Attr:
            return new this.constructor(this.nodeName, this.nodeValue);
          default:
            return new this.constructor(this.nodeName, this.nodeValue, this.nodeType, this.ownerDocument);
        }
      }).call(this);
      for (a in this._private) {
        ret._private[a] = this._private[a];
      }
      for (a in this.attributes) {
        ret.attributes[a] = this.attributes[a];
      }
      if (deep) {
        _ref = this.childNodes;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          c = _ref[_i];
          ret.childNodes.push(c.cloneNode(true));
        }
      }
      return ret;
    };

    Node.prototype.hasAttributes = function() {
      var a;
      for (a in this.attributes) {
        return true;
      }
      return false;
    };

    Node.prototype.isSameNode = function(node) {
      return node === this;
    };

    Node.prototype.hasChildNodes = function() {
      return this.childNodes.length > 0;
    };

    Node.prototype.insertBefore = function(newNode, refNode) {
      var c, i, _i, _j, _len, _len1, _ref, _ref1;
      if (!(refNode != null)) {
        return this.appendChild(newNode);
      }
      if (refNode.parentNode !== this) {
        throw Error("Cannot insertBefore a non-child.");
      }
      if (newNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {
        _ref = newNode.childNodes;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          c = _ref[_i];
          this.insertBefore(c, refNode);
        }
      } else {
        i = refNode._private.childIndex;
        if (i > -1) {
          this.childNodes.splice(i, 0, newNode);
          newNode._private.childIndex = i;
          newNode._private.parentNode = this;
          refNode._private.childIndex = i + 1;
          i = 0;
          _ref1 = this.childNodes;
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            c = _ref1[_j];
            c._private.childIndex = i++;
          }
        }
      }
      return newNode;
    };

    Node.prototype.appendChild = function(node) {
      var c, _i, _len, _ref, _results;
      if (!(node != null)) {
        return;
      }
      if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {
        _ref = node.childNodes;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          c = _ref[_i];
          _results.push(this.appendChild(c));
        }
        return _results;
      } else {
        node._private.parentNode = this;
        node._private.childIndex = this.childNodes.length;
        return this.childNodes.push(node);
      }
    };

    Node.prototype.removeChild = function(node) {
      var c, i, _i, _len, _ref;
      if (typeof node === "number") {
        node = this.childNodes[node];
      }
      i = node._private.childIndex;
      if (i > -1 && node.parentNode === this) {
        node._private.parentNode = null;
        node._private.childIndex = -1;
        this.childNodes.splice(i, 1);
        i = 0;
        _ref = this.childNodes;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          c = _ref[_i];
          c._private.childIndex = i++;
        }
      } else {
        throw Error("Cannot removeChild a non-child.");
      }
      return node;
    };

    Node.prototype.replaceChild = function(newNode, oldNode) {
      var c, i, _i, _len, _ref;
      if (oldNode.parentNode !== this) {
        throw Error("Cannot replaceChild a non-child.");
      }
      i = oldNode._private.childIndex;
      if (i < 0) {
        throw Error("DOM tree corruption, childIndex is < 0");
      }
      if (newNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {
        _ref = this.childNodes;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          c = _ref[_i];
          this.insertBefore(c, oldNode);
        }
        return this.removeChild(oldNode);
      }
      newNode._private.parentNode = this;
      newNode._private.childIndex = i;
      oldNode._private.parentNode = null;
      oldNode._private.childIndex = -1;
      this.childNodes.splice(i, 1, newNode);
      return oldNode;
    };

    Node.prototype.toString = function(pretty, deep, indentLevel) {
      var body, c, indent, newline;
      if (pretty == null) {
        pretty = false;
      }
      if (deep == null) {
        deep = true;
      }
      if (indentLevel == null) {
        indentLevel = 0;
      }
      if (pretty) {
        indent = repeat("  ", indentLevel);
        newline = "\n";
      } else {
        indent = "";
        newline = "";
      }
      switch (this.nodeType) {
        case Node.TEXT_NODE:
          return ("" + indent + this.nodeValue) + newline;
        case Node.ELEMENT_NODE:
          return Element.prototype.toString.call(this, pretty, deep, indentLevel);
        case Node.ATTRIBUTE_NODE:
          if (this.nodeValue !== "") {
            return "" + indent + this.nodeName + "=\"" + this.nodeValue + "\"";
          }
          break;
        case Node.CDATA_SECTION_NODE:
          return ("" + indent + "<![CDATA[" + this.nodeValue + "]]>") + newline;
        case Node.COMMENT_NODE:
          body = "";
          if (this.nodeName === "#CCOMMENT") {
            body = '>' + newline + ((function() {
              var _i, _len, _ref, _results;
              _ref = this.childNodes;
              _results = [];
              for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                c = _ref[_i];
                _results.push(c.toString(pretty, deep, indentLevel + 1));
              }
              return _results;
            }).call(this)).join('');
            body += indent + "<![endif]";
          }
          return ("" + indent + "<!--" + this.nodeValue + body + "-->") + newline;
        case Node.DOCUMENT_TYPE_NODE:
          return ("" + indent + "<!DOCTYPE " + this.nodeValue + ">") + newline;
        case Node.DOCUMENT_NODE:
          return Element.prototype.toString.call(this, pretty, deep, indentLevel);
        case Node.DOCUMENT_FRAGMENT_NODE:
          return NotSupported();
      }
    };

    return Node;

  })();

  property(Node.prototype, 'nodeName', {
    get: function() {
      return this._private.nodeName;
    },
    set: function(v) {
      return this._private.nodeName = v != null ? v.toUpperCase() : void 0;
    }
  });

  property(Node.prototype, 'previousSibling', {
    get: function() {
      var _ref;
      return (_ref = this.parentNode) != null ? _ref.childNodes[this._private.childIndex - 1] : void 0;
    }
  });

  property(Node.prototype, 'nextSibling', {
    get: function() {
      var _ref;
      return (_ref = this.parentNode) != null ? _ref.childNodes[this._private.childIndex + 1] : void 0;
    }
  });

  property(Node.prototype, 'parentNode', {
    get: function() {
      return this._private.parentNode;
    },
    set: function(v) {
      var _ref;
      if (v !== null) {
        throw Error("Must use one of appendChild, insertBefore, etc. to give a Node a new parent.");
      }
      if ((_ref = this._private.parentNode) != null) {
        _ref.removeChild(this);
      }
      this._private.parentNode = null;
      return this._private.childIndex = -1;
    }
  });

  property(Node.prototype, 'firstChild', {
    get: function() {
      return this.childNodes[0];
    }
  });

  property(Node.prototype, 'lastChild', {
    get: function() {
      return this.childNodes[this.childNodes.length - 1];
    }
  });

  Entity = (function(_super) {

    __extends(Entity, _super);

    function Entity() {
      var a, _ref;
      a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      if ((_ref = a[2]) == null) {
        a[2] = Node.ENTITY_NODE;
      }
      Entity.__super__.constructor.apply(this, a);
    }

    return Entity;

  })(Node);

  Element = (function(_super) {

    __extends(Element, _super);

    function Element() {
      var a, _ref;
      a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      if ((_ref = a[2]) == null) {
        a[2] = Node.ELEMENT_NODE;
      }
      Element.__super__.constructor.apply(this, a);
      this.style = {};
    }

    Element.prototype.getElementsByClassName = function(name) {
      var c, i, ret, _i, _j, _len, _len1, _ref, _ref1;
      ret = [];
      _ref = this.childNodes;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        c = _ref[_i];
        if (c.nodeType === Node.ELEMENT_NODE) {
          if (name === "*" || __indexOf.call(c._private.classes, name) >= 0) {
            ret.push(c);
          }
          _ref1 = c.getElementsByClassName(name);
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            i = _ref1[_j];
            ret.push(i);
          }
        }
      }
      return ret;
    };

    Element.prototype.getElementsByTagName = function(name) {
      var c, i, ret, uname, _i, _j, _len, _len1, _ref, _ref1;
      ret = [];
      uname = name.toUpperCase();
      _ref = this.childNodes;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        c = _ref[_i];
        if (c.nodeType === Node.ELEMENT_NODE) {
          if (uname === "*" || uname === c.tagName) {
            ret.push(c);
          }
          _ref1 = c.getElementsByTagName(uname);
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            i = _ref1[_j];
            ret.push(i);
          }
        }
      }
      return ret;
    };

    Element.prototype.getAttribute = function(name) {
      return this.attributes[name] || "";
    };

    Element.prototype.getAttributeNode = function(name) {
      var n;
      n = new Attr(name, this.getAttribute(name));
      n.ownerElement = this;
      n.ownerDocument = this.ownerDocument;
      return n;
    };

    Element.prototype.hasAttribute = function(name) {
      return name in this.attributes;
    };

    Element.prototype.setAttribute = function(name, value) {
      if (!(value != null)) {
        this.removeAttribute(name);
      }
      switch (name) {
        case "class":
          return this.className = value;
        case "id":
          return this.id = value;
        default:
          return this.attributes[name] = value;
      }
    };

    Element.prototype.removeAttribute = function(name) {
      var _ref;
      delete this.attributes[name];
      switch (name) {
        case "class":
          return this._private.classes = [];
        case "id":
          return (_ref = this.ownerDocument) != null ? delete _ref._private.idMap[this.id] : void 0;
      }
    };

    Element.prototype.matchesSelector = function(selector) {
      var _ref;
      return (_ref = this.ownerDocument) != null ? _ref._private.matcher.match(this, selector) : void 0;
    };

    Element.prototype.querySelector = function(selector) {
      var _ref;
      return (_ref = this.ownerDocument) != null ? _ref._private.matcher.select(selector, this)[0] : void 0;
    };

    Element.prototype.querySelectorAll = function(selector) {
      var _ref;
      return (_ref = this.ownerDocument) != null ? _ref._private.matcher.select(selector, this) : void 0;
    };

    Element.prototype.scrollByLines = NotSupported;

    Element.prototype.scrollByPages = NotSupported;

    Element.prototype.scrollIntoView = NotSupported;

    Element.prototype.scrollIntoViewIfNeeded = NotSupported;

    Element.prototype.getBoundingClientRect = NotSupported;

    Element.prototype.getClientRects = NotSupported;

    Element.prototype.focus = NotSupported;

    Element.prototype.blur = NotSupported;

    Element.prototype.toString = function(pretty, deep, indentLevel) {
      var a, attrs, c, end, indent, len, name, newline, r, ret, _i, _len, _ref, _ref1;
      if (pretty == null) {
        pretty = false;
      }
      if (deep == null) {
        deep = true;
      }
      if (indentLevel == null) {
        indentLevel = 0;
      }
      name = (_ref = this.nodeName) != null ? _ref.toLowerCase() : void 0;
      if (pretty && deep) {
        indent = repeat("  ", indentLevel);
        newline = "\n";
      } else {
        indent = "";
        newline = "";
      }
      attrs = ((function() {
        var _results;
        _results = [];
        for (a in this.attributes) {
          _results.push(a.length > 0 && this.attributes[a] !== "" ? " " + a + "=\"" + this.attributes[a] + "\"" : void 0);
        }
        return _results;
      }).call(this)).join('');
      attrs += ((function() {
        var _results;
        _results = [];
        for (a in this.attributes) {
          _results.push(a.length > 0 && this.attributes[a] === "" ? " " + a : void 0);
        }
        return _results;
      }).call(this)).join('');
      len = this.childNodes.length;
      end = (function() {
        switch (len) {
          case 0:
            return "/";
          default:
            return "";
        }
      })();
      ret = [indent + ("<" + name + attrs + end + ">") + newline];
      r = 1;
      if (deep) {
        _ref1 = this.childNodes;
        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
          c = _ref1[_i];
          ret[r++] = c.toString(pretty, deep, indentLevel + 1);
        }
      } else if (len > 0) {
        ret[r++] = indent + ("..." + len + " children...") + newline;
      }
      if (len > 0) {
        ret[r++] = indent + ("</" + name + ">") + newline;
      }
      return ret.join('');
    };

    return Element;

  })(Node);

  ELEMENT_MAP = {
    _: HTMLElement = (function(_super) {

      __extends(HTMLElement, _super);

      function HTMLElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        HTMLElement.__super__.constructor.apply(this, a);
      }

      return HTMLElement;

    })(Element),
    a: HTMLAnchorElement = (function(_super) {

      __extends(HTMLAnchorElement, _super);

      function HTMLAnchorElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "A";
        HTMLAnchorElement.__super__.constructor.apply(this, a);
      }

      return HTMLAnchorElement;

    })(HTMLElement),
    area: HTMLAreaElement = (function(_super) {

      __extends(HTMLAreaElement, _super);

      function HTMLAreaElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "AREA";
        HTMLAreaElement.__super__.constructor.apply(this, a);
      }

      return HTMLAreaElement;

    })(HTMLElement),
    audio: HTMLAudioElement = (function(_super) {

      __extends(HTMLAudioElement, _super);

      function HTMLAudioElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "AUDIO";
        HTMLAudioElement.__super__.constructor.apply(this, a);
      }

      return HTMLAudioElement;

    })(HTMLElement),
    base: HTMLBaseElement = (function(_super) {

      __extends(HTMLBaseElement, _super);

      function HTMLBaseElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "BASE";
        HTMLBaseElement.__super__.constructor.apply(this, a);
      }

      return HTMLBaseElement;

    })(HTMLElement),
    blockquote: HTMLBlockquoteElement = (function(_super) {

      __extends(HTMLBlockquoteElement, _super);

      function HTMLBlockquoteElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "BLOCKQUOTE";
        HTMLBlockquoteElement.__super__.constructor.apply(this, a);
      }

      return HTMLBlockquoteElement;

    })(HTMLElement),
    body: HTMLBodyElement = (function(_super) {

      __extends(HTMLBodyElement, _super);

      function HTMLBodyElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "BODY";
        HTMLBodyElement.__super__.constructor.apply(this, a);
      }

      return HTMLBodyElement;

    })(HTMLElement),
    br: HTMLBRElement = (function(_super) {

      __extends(HTMLBRElement, _super);

      function HTMLBRElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "BR";
        HTMLBRElement.__super__.constructor.apply(this, a);
      }

      return HTMLBRElement;

    })(HTMLElement),
    button: HTMLButtonElement = (function(_super) {

      __extends(HTMLButtonElement, _super);

      function HTMLButtonElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "BUTTON";
        HTMLButtonElement.__super__.constructor.apply(this, a);
      }

      return HTMLButtonElement;

    })(HTMLElement),
    canvas: HTMLCanvasElement = (function(_super) {

      __extends(HTMLCanvasElement, _super);

      function HTMLCanvasElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "CANVAS";
        HTMLCanvasElement.__super__.constructor.apply(this, a);
      }

      return HTMLCanvasElement;

    })(HTMLElement),
    caption: HTMLTableCaptionElement = (function(_super) {

      __extends(HTMLTableCaptionElement, _super);

      function HTMLTableCaptionElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "CAPTION";
        HTMLTableCaptionElement.__super__.constructor.apply(this, a);
      }

      return HTMLTableCaptionElement;

    })(HTMLElement),
    col: HTMLTableColElement = (function(_super) {

      __extends(HTMLTableColElement, _super);

      function HTMLTableColElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "COL";
        HTMLTableColElement.__super__.constructor.apply(this, a);
      }

      return HTMLTableColElement;

    })(HTMLElement),
    colgroup: HTMLTableColElement = (function(_super) {

      __extends(HTMLTableColElement, _super);

      function HTMLTableColElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "COLGROUP";
        HTMLTableColElement.__super__.constructor.apply(this, a);
      }

      return HTMLTableColElement;

    })(HTMLElement),
    del: HTMLDelElement = (function(_super) {

      __extends(HTMLDelElement, _super);

      function HTMLDelElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "DEL";
        HTMLDelElement.__super__.constructor.apply(this, a);
      }

      return HTMLDelElement;

    })(HTMLElement),
    details: HTMLDetailsElement = (function(_super) {

      __extends(HTMLDetailsElement, _super);

      function HTMLDetailsElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "DETAILS";
        HTMLDetailsElement.__super__.constructor.apply(this, a);
      }

      return HTMLDetailsElement;

    })(HTMLElement),
    div: HTMLDivElement = (function(_super) {

      __extends(HTMLDivElement, _super);

      function HTMLDivElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "DIV";
        HTMLDivElement.__super__.constructor.apply(this, a);
      }

      return HTMLDivElement;

    })(HTMLElement),
    dl: HTMLDListElement = (function(_super) {

      __extends(HTMLDListElement, _super);

      function HTMLDListElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "DL";
        HTMLDListElement.__super__.constructor.apply(this, a);
      }

      return HTMLDListElement;

    })(HTMLElement),
    embed: HTMLEmbedElement = (function(_super) {

      __extends(HTMLEmbedElement, _super);

      function HTMLEmbedElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "EMBED";
        HTMLEmbedElement.__super__.constructor.apply(this, a);
      }

      return HTMLEmbedElement;

    })(HTMLElement),
    fieldSet: HTMLFieldSetElement = (function(_super) {

      __extends(HTMLFieldSetElement, _super);

      function HTMLFieldSetElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "FIELDSET";
        HTMLFieldSetElement.__super__.constructor.apply(this, a);
      }

      return HTMLFieldSetElement;

    })(HTMLElement),
    form: HTMLFormElement = (function(_super) {

      __extends(HTMLFormElement, _super);

      function HTMLFormElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "FORM";
        HTMLFormElement.__super__.constructor.apply(this, a);
      }

      return HTMLFormElement;

    })(HTMLElement),
    h1: HTMLHeadingElement = (function(_super) {

      __extends(HTMLHeadingElement, _super);

      function HTMLHeadingElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "H1";
        HTMLHeadingElement.__super__.constructor.apply(this, a);
      }

      return HTMLHeadingElement;

    })(HTMLElement),
    h2: HTMLHeading2Element = (function(_super) {

      __extends(HTMLHeading2Element, _super);

      function HTMLHeading2Element() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "H1";
        HTMLHeading2Element.__super__.constructor.apply(this, a);
      }

      return HTMLHeading2Element;

    })(HTMLHeadingElement),
    h3: HTMLHeading3Element = (function(_super) {

      __extends(HTMLHeading3Element, _super);

      function HTMLHeading3Element() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "H1";
        HTMLHeading3Element.__super__.constructor.apply(this, a);
      }

      return HTMLHeading3Element;

    })(HTMLHeadingElement),
    h4: HTMLHeading4Element = (function(_super) {

      __extends(HTMLHeading4Element, _super);

      function HTMLHeading4Element() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "H1";
        HTMLHeading4Element.__super__.constructor.apply(this, a);
      }

      return HTMLHeading4Element;

    })(HTMLHeadingElement),
    h5: HTMLHeading5Element = (function(_super) {

      __extends(HTMLHeading5Element, _super);

      function HTMLHeading5Element() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "H1";
        HTMLHeading5Element.__super__.constructor.apply(this, a);
      }

      return HTMLHeading5Element;

    })(HTMLHeadingElement),
    h6: HTMLHeading6Element = (function(_super) {

      __extends(HTMLHeading6Element, _super);

      function HTMLHeading6Element() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "H6";
        HTMLHeading6Element.__super__.constructor.apply(this, a);
      }

      return HTMLHeading6Element;

    })(HTMLHeadingElement),
    head: HTMLHeadElement = (function(_super) {

      __extends(HTMLHeadElement, _super);

      function HTMLHeadElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "HEAD";
        HTMLHeadElement.__super__.constructor.apply(this, a);
      }

      return HTMLHeadElement;

    })(HTMLElement),
    hr: HTMLHRElement = (function(_super) {

      __extends(HTMLHRElement, _super);

      function HTMLHRElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "HR";
        HTMLHRElement.__super__.constructor.apply(this, a);
      }

      return HTMLHRElement;

    })(HTMLElement),
    html: HTMLHtmlElement = (function(_super) {

      __extends(HTMLHtmlElement, _super);

      function HTMLHtmlElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "HTML";
        HTMLHtmlElement.__super__.constructor.apply(this, a);
      }

      return HTMLHtmlElement;

    })(HTMLElement),
    iframe: HTMLIFrameElement = (function(_super) {

      __extends(HTMLIFrameElement, _super);

      function HTMLIFrameElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "IFRAME";
        HTMLIFrameElement.__super__.constructor.apply(this, a);
      }

      return HTMLIFrameElement;

    })(HTMLElement),
    image: HTMLImageElement = (function(_super) {

      __extends(HTMLImageElement, _super);

      function HTMLImageElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "IMAGE";
        HTMLImageElement.__super__.constructor.apply(this, a);
      }

      return HTMLImageElement;

    })(HTMLElement),
    input: HTMLInputElement = (function(_super) {

      __extends(HTMLInputElement, _super);

      function HTMLInputElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "INPUT";
        HTMLInputElement.__super__.constructor.apply(this, a);
      }

      return HTMLInputElement;

    })(HTMLElement),
    ins: HTMLInsElement = (function(_super) {

      __extends(HTMLInsElement, _super);

      function HTMLInsElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "INS";
        HTMLInsElement.__super__.constructor.apply(this, a);
      }

      return HTMLInsElement;

    })(HTMLElement),
    keygen: HTMLKeygenElement = (function(_super) {

      __extends(HTMLKeygenElement, _super);

      function HTMLKeygenElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "KEYGEN";
        HTMLKeygenElement.__super__.constructor.apply(this, a);
      }

      return HTMLKeygenElement;

    })(HTMLElement),
    label: HTMLLabelElement = (function(_super) {

      __extends(HTMLLabelElement, _super);

      function HTMLLabelElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "LABEL";
        HTMLLabelElement.__super__.constructor.apply(this, a);
      }

      return HTMLLabelElement;

    })(HTMLElement),
    legend: HTMLLegendElement = (function(_super) {

      __extends(HTMLLegendElement, _super);

      function HTMLLegendElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "LEGEND";
        HTMLLegendElement.__super__.constructor.apply(this, a);
      }

      return HTMLLegendElement;

    })(HTMLElement),
    li: HTMLLIElement = (function(_super) {

      __extends(HTMLLIElement, _super);

      function HTMLLIElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "LI";
        HTMLLIElement.__super__.constructor.apply(this, a);
      }

      return HTMLLIElement;

    })(HTMLElement),
    link: HTMLLinkElement = (function(_super) {

      __extends(HTMLLinkElement, _super);

      function HTMLLinkElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "LINK";
        HTMLLinkElement.__super__.constructor.apply(this, a);
      }

      return HTMLLinkElement;

    })(HTMLElement),
    map: HTMLMapElement = (function(_super) {

      __extends(HTMLMapElement, _super);

      function HTMLMapElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "MAP";
        HTMLMapElement.__super__.constructor.apply(this, a);
      }

      return HTMLMapElement;

    })(HTMLElement),
    menu: HTMLMenuElement = (function(_super) {

      __extends(HTMLMenuElement, _super);

      function HTMLMenuElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "MENU";
        HTMLMenuElement.__super__.constructor.apply(this, a);
      }

      return HTMLMenuElement;

    })(HTMLElement),
    meta: HTMLMetaElement = (function(_super) {

      __extends(HTMLMetaElement, _super);

      function HTMLMetaElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "META";
        HTMLMetaElement.__super__.constructor.apply(this, a);
      }

      return HTMLMetaElement;

    })(HTMLElement),
    meter: HTMLMeterElement = (function(_super) {

      __extends(HTMLMeterElement, _super);

      function HTMLMeterElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "METER";
        HTMLMeterElement.__super__.constructor.apply(this, a);
      }

      return HTMLMeterElement;

    })(HTMLElement),
    object: HTMLObjectElement = (function(_super) {

      __extends(HTMLObjectElement, _super);

      function HTMLObjectElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "OBJECT";
        HTMLObjectElement.__super__.constructor.apply(this, a);
      }

      return HTMLObjectElement;

    })(HTMLElement),
    ol: HTMLOListElement = (function(_super) {

      __extends(HTMLOListElement, _super);

      function HTMLOListElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "OL";
        HTMLOListElement.__super__.constructor.apply(this, a);
      }

      return HTMLOListElement;

    })(HTMLElement),
    optgroup: HTMLOptGroupElement = (function(_super) {

      __extends(HTMLOptGroupElement, _super);

      function HTMLOptGroupElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "OPTGROUP";
        HTMLOptGroupElement.__super__.constructor.apply(this, a);
      }

      return HTMLOptGroupElement;

    })(HTMLElement),
    option: HTMLOptionElement = (function(_super) {

      __extends(HTMLOptionElement, _super);

      function HTMLOptionElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "OPTION";
        HTMLOptionElement.__super__.constructor.apply(this, a);
      }

      return HTMLOptionElement;

    })(HTMLInputElement),
    output: HTMLOutputElement = (function(_super) {

      __extends(HTMLOutputElement, _super);

      function HTMLOutputElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "OUTPUT";
        HTMLOutputElement.__super__.constructor.apply(this, a);
      }

      return HTMLOutputElement;

    })(HTMLElement),
    p: HTMLParagraphElement = (function(_super) {

      __extends(HTMLParagraphElement, _super);

      function HTMLParagraphElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "P";
        HTMLParagraphElement.__super__.constructor.apply(this, a);
      }

      return HTMLParagraphElement;

    })(HTMLElement),
    param: HTMLParamElement = (function(_super) {

      __extends(HTMLParamElement, _super);

      function HTMLParamElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "PARAM";
        HTMLParamElement.__super__.constructor.apply(this, a);
      }

      return HTMLParamElement;

    })(HTMLElement),
    pre: HTMLPreElement = (function(_super) {

      __extends(HTMLPreElement, _super);

      function HTMLPreElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "PRE";
        HTMLPreElement.__super__.constructor.apply(this, a);
      }

      return HTMLPreElement;

    })(HTMLElement),
    progress: HTMLProgressElement = (function(_super) {

      __extends(HTMLProgressElement, _super);

      function HTMLProgressElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "PROGRESS";
        HTMLProgressElement.__super__.constructor.apply(this, a);
      }

      return HTMLProgressElement;

    })(HTMLElement),
    quote: HTMLQuoteElement = (function(_super) {

      __extends(HTMLQuoteElement, _super);

      function HTMLQuoteElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "QUOTE";
        HTMLQuoteElement.__super__.constructor.apply(this, a);
      }

      return HTMLQuoteElement;

    })(HTMLElement),
    script: HTMLScriptElement = (function(_super) {

      __extends(HTMLScriptElement, _super);

      function HTMLScriptElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "SCRIPT";
        HTMLScriptElement.__super__.constructor.apply(this, a);
      }

      return HTMLScriptElement;

    })(HTMLElement),
    select: HTMLSelectElement = (function(_super) {

      __extends(HTMLSelectElement, _super);

      function HTMLSelectElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "SELECT";
        HTMLSelectElement.__super__.constructor.apply(this, a);
      }

      return HTMLSelectElement;

    })(HTMLInputElement),
    source: HTMLSourceElement = (function(_super) {

      __extends(HTMLSourceElement, _super);

      function HTMLSourceElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "SOURCE";
        HTMLSourceElement.__super__.constructor.apply(this, a);
      }

      return HTMLSourceElement;

    })(HTMLElement),
    style: HTMLStyleElement = (function(_super) {

      __extends(HTMLStyleElement, _super);

      function HTMLStyleElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "STYLE";
        HTMLStyleElement.__super__.constructor.apply(this, a);
      }

      return HTMLStyleElement;

    })(HTMLElement),
    table: HTMLTableElement = (function(_super) {

      __extends(HTMLTableElement, _super);

      function HTMLTableElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "TABLE";
        HTMLTableElement.__super__.constructor.apply(this, a);
      }

      return HTMLTableElement;

    })(HTMLElement),
    thead: HTMLTableHeadElement = (function(_super) {

      __extends(HTMLTableHeadElement, _super);

      function HTMLTableHeadElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "THEAD";
        HTMLTableHeadElement.__super__.constructor.apply(this, a);
      }

      return HTMLTableHeadElement;

    })(HTMLElement),
    tbody: HTMLTableBodyElement = (function(_super) {

      __extends(HTMLTableBodyElement, _super);

      function HTMLTableBodyElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "TBODY";
        HTMLTableBodyElement.__super__.constructor.apply(this, a);
      }

      return HTMLTableBodyElement;

    })(HTMLElement),
    tfoot: HTMLTableFootElement = (function(_super) {

      __extends(HTMLTableFootElement, _super);

      function HTMLTableFootElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "TFOOT";
        HTMLTableFootElement.__super__.constructor.apply(this, a);
      }

      return HTMLTableFootElement;

    })(HTMLElement),
    td: HTMLTableCellElement = (function(_super) {

      __extends(HTMLTableCellElement, _super);

      function HTMLTableCellElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "TD";
        HTMLTableCellElement.__super__.constructor.apply(this, a);
      }

      return HTMLTableCellElement;

    })(HTMLElement),
    th: HTMLTableHeadElement = (function(_super) {

      __extends(HTMLTableHeadElement, _super);

      function HTMLTableHeadElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "TH";
        HTMLTableHeadElement.__super__.constructor.apply(this, a);
      }

      return HTMLTableHeadElement;

    })(HTMLTableCellElement),
    tr: HTMLTableRowElement = (function(_super) {

      __extends(HTMLTableRowElement, _super);

      function HTMLTableRowElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "TR";
        HTMLTableRowElement.__super__.constructor.apply(this, a);
      }

      return HTMLTableRowElement;

    })(HTMLElement),
    textarea: HTMLTextAreaElement = (function(_super) {

      __extends(HTMLTextAreaElement, _super);

      function HTMLTextAreaElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "TEXTAREA";
        HTMLTextAreaElement.__super__.constructor.apply(this, a);
      }

      return HTMLTextAreaElement;

    })(HTMLElement),
    title: HTMLTitleElement = (function(_super) {

      __extends(HTMLTitleElement, _super);

      function HTMLTitleElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "TITLE";
        HTMLTitleElement.__super__.constructor.apply(this, a);
      }

      return HTMLTitleElement;

    })(HTMLElement),
    ul: HTMLUListElement = (function(_super) {

      __extends(HTMLUListElement, _super);

      function HTMLUListElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "UL";
        HTMLUListElement.__super__.constructor.apply(this, a);
      }

      return HTMLUListElement;

    })(HTMLElement),
    video: HTMLVideoElement = (function(_super) {

      __extends(HTMLVideoElement, _super);

      function HTMLVideoElement() {
        var a;
        a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        a[0] = "VIDEO";
        HTMLVideoElement.__super__.constructor.apply(this, a);
      }

      return HTMLVideoElement;

    })(HTMLElement)
  };

  property(Element.prototype, 'tagName', {
    get: function() {
      return this.nodeName;
    }
  });

  property(Element.prototype, 'innerHTML', {
    get: function() {
      var c, h, _i, _len, _ref;
      h = [];
      _ref = this.childNodes;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        c = _ref[_i];
        h.push(c.toString());
      }
      return h.join('');
    },
    set: function(v) {
      var c, fragment, _i, _len, _ref;
      fragment = htmlparse(v, this.ownerDocument);
      _ref = this.childNodes;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        c = _ref[_i];
        c._private.parentNode = null;
        c._private.childIndex = -1;
      }
      this.childNodes.length = 0;
      return this.appendChild(fragment);
    }
  });

  getInnerText = function() {
    var c, t, _i, _len, _ref, _ref1;
    t = [];
    _ref = this.childNodes;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      c = _ref[_i];
      if ((_ref1 = c.nodeType) === Node.TEXT_NODE || _ref1 === Node.CDATA_SECTION_NODE) {
        t.push(c.toString(false, false));
      } else if (c.nodeType !== Node.COMMENT_NODE) {
        t.push(getInnerText.apply(c));
      }
    }
    return t.join('');
  };

  setInnerText = function(text) {
    while (this.hasChildNodes()) {
      this.removeChild(0);
    }
    return this.appendChild(new Text(text, this));
  };

  property(Element.prototype, 'innerText', {
    get: getInnerText,
    set: setInnerText
  });

  property(Element.prototype, 'textContent', {
    get: getInnerText,
    set: setInnerText
  });

  property(Element.prototype, 'id', {
    get: function() {
      return this.attributes['id'];
    },
    set: function(value) {
      var o;
      o = this.ownerDocument != null;
      if (o) {
        if (this.attributes.id != null) {
          delete this.ownerDocument._private.idMap[this.attributes.id];
        }
      }
      if (value === null || value === (void 0) || value === "undefined") {
        return delete this.attributes.id;
      } else {
        if (o) {
          this.ownerDocument._private.idMap[value] = this;
        }
        return this.attributes.id = value;
      }
    }
  });

  property(Element.prototype, 'className', {
    get: function() {
      return this.attributes['class'] || "";
    },
    set: function(value) {
      if (value === null || value === (void 0) || value === "undefined") {
        delete this.attributes["class"];
        return this._private.classes.length = 0;
      } else {
        this.attributes['class'] = value;
        return this._private.classes = value.split(' ');
      }
    }
  });

  property(HTMLInputElement.prototype, 'value', {
    get: function() {
      var _ref;
      return this.attributes.value || ((_ref = this.attributes.type) === 'checkbox' || _ref === 'radio' ? "on" : void 0) || "";
    },
    set: function(v) {
      return this.setAttribute('value', v);
    }
  });

  property(HTMLInputElement.prototype, 'checked', {
    get: function() {
      return this.hasAttribute('checked');
    },
    set: function(v) {
      if (v != null) {
        return this.setAttribute('checked', 'checked');
      } else {
        return this.removeAttribute('checked');
      }
    }
  });

  property(HTMLInputElement.prototype, 'selected', {
    get: function() {
      return this.hasAttribute('selected');
    },
    set: function(v) {
      if (v != null) {
        return this.setAttribute('selected', 'selected');
      } else {
        return this.removeAttribute('selected');
      }
    }
  });

  property(HTMLSelectElement.prototype, 'selectedIndex', {
    get: function() {
      var index, _i, _ref;
      if (!((this._private.selectedIndex != null) && this._private.selectedIndex < this.childNodes.length)) {
        for (index = _i = 0, _ref = this.childNodes.length; 0 <= _ref ? _i < _ref : _i > _ref; index = 0 <= _ref ? ++_i : --_i) {
          if (this.childNodes[index].hasAttribute('selected')) {
            this._private.selectedIndex = index;
          }
        }
      }
      return this._private.selectedIndex || 0;
    },
    set: function(v) {
      var index, _i, _ref;
      if (v < this.childNodes.length) {
        for (index = _i = 0, _ref = this.childNodes.length; 0 <= _ref ? _i < _ref : _i > _ref; index = 0 <= _ref ? ++_i : --_i) {
          if (index === v) {
            this.childNodes[index].setAttribute('selected', 'selected');
          } else {
            this.childNodes[index].removeAttribute('selected');
          }
        }
        this._private.selectedIndex = v;
      }
      return this._private.selectedIndex || 0;
    }
  });

  property(HTMLOptionElement.prototype, 'value', {
    get: function() {
      if (this.hasAttribute('value')) {
        return this.getAttribute('value');
      } else {
        return this.innerText;
      }
    },
    set: function(v) {
      return this.setAttribute('value', v);
    }
  });

  property(HTMLSelectElement.prototype, 'value', {
    get: function() {
      var _ref;
      return (_ref = this.childNodes[this.selectedIndex]) != null ? _ref.value : void 0;
    },
    set: function(v) {
      var child, index, _i, _ref, _results;
      _results = [];
      for (index = _i = 0, _ref = this.childNodes.length; 0 <= _ref ? _i < _ref : _i > _ref; index = 0 <= _ref ? ++_i : --_i) {
        child = this.childNodes[index];
        if (child.value === v) {
          _results.push(this.selectedIndex = index);
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    }
  });

  Attr = (function(_super) {

    __extends(Attr, _super);

    function Attr(name, value) {
      Attr.__super__.constructor.call(this, name, value, Node.ATTRIBUTE_NODE, null);
      this.name = this.nodeName;
      this.value = this.nodeValue;
      this.ownerElement = null;
    }

    return Attr;

  })(Node);

  CData = (function(_super) {

    __extends(CData, _super);

    function CData(value, owner) {
      CData.__super__.constructor.call(this, "#cdata", value, Node.CDATA_SECTION_NODE, owner);
    }

    return CData;

  })(Node);

  Comment = (function(_super) {

    __extends(Comment, _super);

    function Comment(value, owner) {
      Comment.__super__.constructor.call(this, "#comment", value, Node.COMMENT_NODE, owner);
    }

    return Comment;

  })(Node);

  CComment = (function(_super) {

    __extends(CComment, _super);

    function CComment(value, owner) {
      CComment.__super__.constructor.call(this, "#ccomment", "[" + value + "]", Node.COMMENT_NODE, owner);
    }

    return CComment;

  })(Node);

  Text = (function(_super) {

    __extends(Text, _super);

    function Text(value, owner) {
      Text.__super__.constructor.call(this, "#text", value, Node.TEXT_NODE, owner);
    }

    return Text;

  })(Node);

  property(Text.prototype, 'data', {
    set: function(v) {
      return this.nodeValue = htmlescape(v);
    }
  });

  DocumentFragment = (function(_super) {

    __extends(DocumentFragment, _super);

    function DocumentFragment(owner) {
      DocumentFragment.__super__.constructor.call(this, "#document-fragment", null, Node.DOCUMENT_FRAGMENT_NODE, owner);
    }

    DocumentFragment.prototype.toString = function(pretty, deep) {
      var c, r, ret, _i, _len, _ref;
      if (pretty == null) {
        pretty = false;
      }
      if (deep == null) {
        deep = true;
      }
      ret = [];
      r = 0;
      _ref = this.childNodes;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        c = _ref[_i];
        ret[r++] = c.toString(pretty, deep);
      }
      return ret.join('');
    };

    return DocumentFragment;

  })(Node);

  property(DocumentFragment.prototype, 'parentNode', {
    set: function(v) {
      throw Error("DocumentFragment cannot have a parentNode");
    }
  });

  Document = (function(_super) {

    __extends(Document, _super);

    function Document() {
      var a, _ref;
      a = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      if ((_ref = a[0]) == null) {
        a[0] = "#document";
      }
      a[2] = Node.DOCUMENT_NODE;
      Document.__super__.constructor.apply(this, a);
      this.documentElement = this;
      this.documentURI = null;
      this._private = extend(this._private, {
        idMap: {}
      });
    }

    Document.prototype.createCDATASection = function(value) {
      return new CData(value, this);
    };

    Document.prototype.createComment = function(value) {
      return new Comment(value, this);
    };

    Document.prototype.createCComment = function(value) {
      return new CComment(value, this);
    };

    Document.prototype.createDocumentFragment = function() {
      return new DocumentFragment(this);
    };

    Document.prototype.createElement = function(name) {
      var nodeClass;
      nodeClass = ELEMENT_MAP[name != null ? name.toLowerCase() : void 0];
      if (!(nodeClass != null)) {
        return new ELEMENT_MAP['_'](name.toUpperCase());
      } else {
        return new nodeClass(name.toUpperCase(), null, null, this);
      }
    };

    Document.prototype.createEntityReference = NotSupported;

    Document.prototype.createEvent = function(type) {
      switch (type) {
        case "MutationEvents":
          return new MutationEvent();
        default:
          return new Event();
      }
    };

    Document.prototype.createTextNode = function(text) {
      return new Text(text, this);
    };

    Document.prototype.getElementById = function(id) {
      return this._private.idMap[id];
    };

    return Document;

  })(Element);

  HTMLDocument = (function(_super) {

    __extends(HTMLDocument, _super);

    function HTMLDocument() {
      HTMLDocument.__super__.constructor.call(this, "HTML", null, Node.DOCUMENT_NODE, this);
      Document.prototype.appendChild.call(this, this.createElement('head'));
      Document.prototype.appendChild.call(this, this.createElement('body'));
      this.head = this.childNodes[0];
      this.body = this.childNodes[1];
      this._private = extend(this._private, {
        matcher: matcher.init(global, this)
      });
    }

    HTMLDocument.prototype.hasChildNodes = function() {
      return true;
    };

    HTMLDocument.prototype.insertBefore = NotSupported;

    HTMLDocument.prototype.appendChild = NotSupported;

    HTMLDocument.prototype.removeChild = NotSupported;

    HTMLDocument.prototype.replaceChild = NotSupported;

    HTMLDocument.prototype.write = NotSupported;

    HTMLDocument.prototype.writeln = NotSupported;

    return HTMLDocument;

  })(Document);

  exports.createDocument = function() {
    return new HTMLDocument();
  };

  exports.registerGlobals = function(g) {
    var c, tagName, _results;
    g.Element = Element;
    g.Node = Node;
    g.Document = Document;
    g.DocumentFragment = DocumentFragment;
    g.NodeList = Array;
    g.Event = Event;
    _results = [];
    for (tagName in ELEMENT_MAP) {
      c = ELEMENT_MAP[tagName];
      _results.push(g[c.name] = c);
    }
    return _results;
  };

}).call(this);
